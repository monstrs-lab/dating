syntax = "proto3";

package tech.monstrs.dating.profiles.v1alpha1;

import "google/protobuf/timestamp.proto";
import "tech/monstrs/queries/v1alpha1/queries.proto";

service ProfilesService {
  rpc FillProfileGeoposition(FillProfileGeopositionRequest) returns (FillProfileGeopositionResponse) {}
  rpc FillProfileGender(FillProfileGenderRequest) returns (FillProfileGenderResponse) {}
  rpc FillProfileName(FillProfileNameRequest) returns (FillProfileNameResponse) {}
  rpc AddProfilePhoto(AddProfilePhotoRequest) returns (AddProfilePhotoResponse) {}
  rpc ListProfiles(ListProfilesRequest) returns (ListProfilesResponse) {}
}

enum ProfileGender {
  MALE = 0;
  FEMALE = 1;
}

message ProfileGeoposition {
  float latitude = 1;
  float longitude = 2;
}

message Profile {
  string id = 1;
  optional ProfileGender gender = 2;
  optional string name = 3;
  optional string location = 4;
  optional ProfileGeoposition geoposition = 5;
  repeated string photos = 6;
  google.protobuf.Timestamp created_at = 7;
}

message FillProfileGeopositionRequest {
  string profile_id = 1;
  float latitude = 2;
  float longitude = 3;
}

message FillProfileGeopositionResponse {
  Profile result = 1;
}

message FillProfileGenderRequest {
  string profile_id = 1;
  ProfileGender gender = 2;
}

message FillProfileGenderResponse {
  Profile result = 1;
}

message FillProfileNameRequest {
  string profile_id = 1;
  string name = 2;
}

message FillProfileNameResponse {
  Profile result = 1;
}

message AddProfilePhotoRequest {
  string profile_id = 1;
  string photo_id = 2;
}

message AddProfilePhotoResponse {
  Profile result = 1;
}

message ListProfilesRequest {
  message ProfilesQuery {
    tech.monstrs.queries.v1alpha1.Query.ID id = 1;
  }

  tech.monstrs.queries.v1alpha1.Query.Pager pager = 1;
  tech.monstrs.queries.v1alpha1.Query.Order order = 2;
  tech.monstrs.queries.v1alpha1.Query.Search search = 3;
  ProfilesQuery query = 4;
}

message ListProfilesResponse {
  repeated Profile profiles = 1;
  bool has_next_page = 2;
}
