version: '3.8'

services:
  yarn:
    image: node:19.9
    working_dir: /workspace
    volumes:
      - ./:/workspace
      - unplugged:/workspace/.yarn/unplugged
    entrypoint: yarn

  db:
    image: bitnami/postgresql
    volumes:
      - .config/db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=db
    ports:
      - 5432:5432

  redis:
    image: bitnami/redis
    environment:
      - REDIS_PASSWORD=password
    ports:
      - 6379:6379

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kratos-migrate:
    image: oryd/kratos:latest
    depends_on:
      - db
    environment:
      - DSN=postgres://postgres:password@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: .config/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yaml migrate sql -e --yes
    restart: on-failure

  kratos:
    image: oryd/kratos:latest
    depends_on:
      - kratos-migrate
      - mailslurper
      - db
    ports:
      - '4433:4433'
      - '4434:4434'
    restart: unless-stopped
    environment:
      - DSN=postgres://postgres:password@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yaml --dev --watch-courier
    volumes:
      - type: bind
        source: .config/kratos
        target: /etc/config/kratos
    networks:
      default:
        aliases:
          - kratos-public
          - kratos-admin

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'

  oathkeeper:
    image: oryd/oathkeeper:latest
    ports:
      - '4455:4455'
      - '4456:4456'
    command: serve --config=/etc/config/oathkeeper/config.yaml
    volumes:
      - type: bind
        source: .config/oathkeeper
        target: /etc/config/oathkeeper

  minio:
    image: minio/minio:latest
    volumes:
      - ./.data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=accesskey
      - MINIO_ROOT_PASSWORD=secretkey
    command: server data --console-address ":9001"

  files:
    image: monstrs/files-system-service-entrypoint:latest
    depends_on:
      - minio
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=eu-central-1
      - AWS_ACCESS_KEY_ID=accesskey
      - AWS_SECRET_ACCESS_KEY=secretkey
      - KAFKA_BROKERS=kafka:29092
      - DB_HOST=db
      - FILES_BUCKETS_PHOTOS_TYPE=public
      - FILES_BUCKETS_PHOTOS_BUCKET=photos
      - FILES_BUCKETS_PHOTOS_PATH=data/
      - FILES_BUCKETS_PHOTOS_CONDITIONS_TYPE=image/*
      - FILES_BUCKETS_PHOTOS_CONDITIONS_SIZE_MIN=0
      - FILES_BUCKETS_PHOTOS_CONDITIONS_SIZE_MAX=1000000000

  standalone:
    image: node:19.9
    depends_on:
      - kafka
      - db
    working_dir: /workspace
    volumes:
      - ./:/workspace
    ports:
      - '3000:3000'
    entrypoint: yarn workspace @dating/standalone-service-entrypoint dev
    environment:
      - FILES_SERVICE_URL=http://files:50051
      - KAFKA_BROKERS=kafka:29092
      - DB_HOST=db

volumes:
  unplugged:
